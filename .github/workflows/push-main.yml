name: push main

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  run_tests_build_app:
    name: Run tests and build app
    runs-on: ubuntu-20.04
    env:
      OPENAPI_USER: ${{ secrets.OPENAPI_USER }}
      OPENAPI_PASSWORD: ${{ secrets.OPENAPI_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run Unitary tests
        run: mvn test
      - name: Build native with Maven
        run: mvn -B package
      - name: Upload jar for next job
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: target
          retention-days: 1
  
  build_docker_image:
    name: Publish in DockerHub
    runs-on: ubuntu-20.04
    needs: [run_tests_build_app]
    env:
      IMAGE_NAME: twitter-scheduler-tfm
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download jar from previous job
        uses: actions/download-artifact@v2
        with:
          name: target
          path: target
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: docker-image:latest
          outputs: type=docker,dest=/tmp/docker-image.tar
      - name: Load Docker image
        run: |
          docker load --input /tmp/docker-image.tar
      - name: Login to DockerHub
        run: docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN" 
      - name: Push image to DockerHub
        run: |
          IMAGE_VERSION=$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)
          docker tag docker-image $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_VERSION
          docker tag docker-image $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_VERSION
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest

  build_and_deploy_in_heroku:
    name: Publish and deploy in Heroku
    runs-on: ubuntu-20.04
    needs: [run_tests_build_app]
    env:
      API_USERNAME: ${{ secrets.API_USERNAME }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Download jar from previous job
        uses: actions/download-artifact@v2
        with:
          name: target
          path: target
      - name: Heroku Container Registry login
        run: heroku container:login 
      - name: Build and push
        run: heroku container:push -a $HEROKU_APP_NAME web --arg API_USERNAME=$API_USERNAME,API_PASSWORD=$API_PASSWORD
      - name: Release
        run: heroku container:release -a $HEROKU_APP_NAME web